-- Схема базы данных для реферальной системы Melodix DJ Pads
-- Для использования в Supabase

-- Таблица пользователей
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    telegram_id BIGINT UNIQUE NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT,
    username TEXT,
    photo_url TEXT,
    referral_code TEXT UNIQUE NOT NULL,
    points INTEGER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Индекс для быстрого поиска по telegram_id
CREATE INDEX idx_users_telegram_id ON users(telegram_id);

-- Индекс для быстрого поиска по referral_code
CREATE INDEX idx_users_referral_code ON users(referral_code);

-- Таблица реферальных связей
CREATE TABLE referrals (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    referrer_id BIGINT NOT NULL REFERENCES users(id),
    referred_id BIGINT NOT NULL REFERENCES users(id),
    referral_code TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'completed',
    points_awarded INTEGER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Индекс для быстрого поиска по referrer_id
CREATE INDEX idx_referrals_referrer_id ON referrals(referrer_id);

-- Индекс для быстрого поиска по referred_id
CREATE INDEX idx_referrals_referred_id ON referrals(referred_id);

-- Уникальный индекс для предотвращения дублирования связей
CREATE UNIQUE INDEX idx_referrals_unique_relation ON referrals(referrer_id, referred_id);

-- Функция для автоматического обновления updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Триггер для обновления updated_at в таблице users
CREATE TRIGGER update_users_updated_at
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Триггер для обновления updated_at в таблице referrals
CREATE TRIGGER update_referrals_updated_at
BEFORE UPDATE ON referrals
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Политики безопасности для Row Level Security (RLS)
-- Включаем RLS для таблиц
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE referrals ENABLE ROW LEVEL SECURITY;

-- Создаем политики для таблицы users
CREATE POLICY "Публичный доступ на чтение users" ON users
    FOR SELECT USING (true);

-- Упрощенные политики без проверки аутентификации для тестирования
CREATE POLICY "Разрешить вставку в users" ON users
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Разрешить обновление users" ON users
    FOR UPDATE USING (true);

-- Создаем политики для таблицы referrals
CREATE POLICY "Публичный доступ на чтение referrals" ON referrals
    FOR SELECT USING (true);

CREATE POLICY "Разрешить вставку в referrals" ON referrals
    FOR INSERT WITH CHECK (true);

-- Комментарии к таблицам и полям
COMMENT ON TABLE users IS 'Таблица пользователей приложения';
COMMENT ON COLUMN users.telegram_id IS 'ID пользователя в Telegram';
COMMENT ON COLUMN users.referral_code IS 'Уникальный реферальный код пользователя';
COMMENT ON COLUMN users.points IS 'Количество очков пользователя';

COMMENT ON TABLE referrals IS 'Таблица реферальных связей между пользователями';
COMMENT ON COLUMN referrals.referrer_id IS 'ID пользователя, который пригласил';
COMMENT ON COLUMN referrals.referred_id IS 'ID пользователя, которого пригласили';
COMMENT ON COLUMN referrals.referral_code IS 'Реферальный код, который был использован';
COMMENT ON COLUMN referrals.status IS 'Статус реферальной связи (completed, pending, etc.)';
COMMENT ON COLUMN referrals.points_awarded IS 'Количество очков, начисленных за приглашение';
